
#ifndef MDHT_TRACK_H
#define MDHT_TRACK_H

//
//  Track.h
//  MuonColliderToy
//
//  Created by Luciano Ristori on 6/25/21
//  Modified for use with Muon Collider code April 3 2025
//

#include <iostream>
#include <vector>

class Hit; // forward declaration

class Track {

  public:
    // primary parameters

    int ID; // sequence number or ID (not initialized by constructor, user available)

    int    massInd; //  mass: 0 = gamma, 1 = e, 2 = pi, 3 = K, 4 = p
    double mass;
    double x0, y0, z0, t0;  // origin
    double invPt, eta, phi; // signed inverse pt in GeV/c^(-1), phi [-Pi, +Pi]

    // derived parameters

    double Pz;   // longitudinal component of momentum
    double P;    // momentum
    double phi0; // phi coordinate of particle at z = 0

    double Pt, E;

    double c;        // signed curvatures
    double charge;   // sign of invPt
    double cotTheta; // cotangent of polar angle
    double tgTheta;  // tangent of polar angle
    double cosTheta; // cosine of polar angle
    double beta;     // velocity

    double cMin = 1.e-6; // minimum curvature - use 1st order approx if less than that

    std::vector<Hit> hitList; // copy of hits generated by this track

    // constructors

    Track(){}; // default

    //Track(TrackGeometry &g); // generates random track with parameters from specific TrackGeometry class instance

    Track(double mass, double x0_, double y0_, double z0_, double t0_, double invPt_, double eta_,
          double phi_); // specific track constructor

    // common track initialization code

    void init(double mass_, double x0_, double y0_, double z0_, double t0_, double invPt_, double eta_, double phi_);

    void print(std::ostream& out, int mode); // dumps text description of track to ostream

    void write(std::ostream& out); // write track to a file

    //void getIJK(unsigned &I, unsigned &J, unsigned &K); // returns indices in HTM array

}; // end class Track

#endif // MDHT_TRACK_H
